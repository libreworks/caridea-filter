<?php
namespace Caridea\Filter;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-09-16 at 16:02:34.
 */
class ArraysTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @covers Caridea\Filter\Arrays::coerce
     */
    public function testCoerce()
    {
        $this->assertEquals([], Arrays::coerce(null));
        $this->assertEquals([false], Arrays::coerce(false));
        $this->assertEquals([123], Arrays::coerce(123));
        $this->assertEquals([123.4], Arrays::coerce(123.4));
        $this->assertEquals(['foo'], Arrays::coerce("foo"));
        $this->assertEquals([123], Arrays::coerce([123]));
        $ao = new \ArrayObject(['foo']);
        $this->assertEquals(['foo'], Arrays::coerce($ao->getIterator()));
    }

    /**
     * @covers Caridea\Filter\Arrays::coerce
     */
    public function testCoerce2()
    {
        $ao = new \ArrayObject(['foo']);
        $this->assertEquals(['foo'], Arrays::coerce($ao->getIterator()));
    }

    /**
     * @covers Caridea\Filter\Arrays::coerce
     * @expectedException \InvalidArgumentException
     * @expectedExceptionMessage Could not convert to array: object
     */
    public function testCoerceFail()
    {
        Arrays::coerce($this);
    }

    /**
     * @covers Caridea\Filter\Arrays::split
     */
    public function testSplit()
    {
        $f = Arrays::split("/[-_]/");
        $this->assertEquals(['Foo', 'bar'], $f('Foo-bar'));
        $this->assertEquals(['FOO', 'FoO', 'foo'], $f('FOO_FoO_foo'));
    }

    /**
     * @covers Caridea\Filter\Arrays::explode
     */
    public function testExplode()
    {
        $f = Arrays::explode(" ");
        $this->assertEquals(['Foo', 'bar'], $f('Foo bar'));
        $this->assertEquals(['FOO', 'FoO', 'foo'], $f('FOO FoO foo'));
    }

    /**
     * @covers Caridea\Filter\Arrays::join
     */
    public function testJoin()
    {
        $f = Arrays::join(",");
        $this->assertEquals('Foo,bar', $f(['Foo', 'bar']));
        $this->assertEquals('FOO,FoO,foo', $f(['FOO', 'FoO', 'foo']));
    }

    /**
     * @covers Caridea\Filter\Arrays::join
     * @expectedException \InvalidArgumentException
     * @expectedExceptionMessage Could not convert to array: object
     */
    public function testJoin2()
    {
        $f = Arrays::join(",");
        $f($this);
    }

    /**
     * @covers Caridea\Filter\Arrays::slice
     */
    public function testSlice()
    {
        $f = Arrays::slice(2);
        $this->assertEquals([1,2], $f([1,2,3,4]));
        $this->assertEquals([1,2], $f([1,2]));
        $this->assertEquals([1], $f([1]));
    }
}
